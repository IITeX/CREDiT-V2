#!/bin/bash

# Fix IC Network Deployment Script
# This script will properly deploy the WASM modules to your existing canister IDs

echo "🔧 dResume V2 - Fix IC Network Deployment"
echo "========================================"

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Function to print colored output
print_info() {
    echo -e "${BLUE}ℹ️  $1${NC}"
}

print_success() {
    echo -e "${GREEN}✅ $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}⚠️  $1${NC}"
}

print_error() {
    echo -e "${RED}❌ $1${NC}"
}

# Check if we're in the right directory
if [ ! -f "dfx.json" ]; then
    print_error "dfx.json not found. Please run this script from the project root."
    exit 1
fi

# Check if dfx is available
if ! command -v dfx &> /dev/null; then
    print_error "dfx command not found. Please make sure DFX is installed."
    exit 1
fi

print_info "Checking current canister status..."

# Your existing canister IDs
CREDENTIAL_NFT_ID="k7fau-4yaaa-aaaao-qkb2a-cai"
STORAGE_ID="kyega-raaaa-aaaao-qkb2q-cai"

echo ""
print_info "Current Canister IDs:"
echo "  Credential NFT: $CREDENTIAL_NFT_ID"
echo "  Storage: $STORAGE_ID"

echo ""
print_info "Step 1: Building only deployed canisters..."

# Backup original dfx.json and use IC-only version
print_info "Using simplified dfx configuration for IC deployment..."
if [ -f "dfx.json.backup" ]; then
    print_info "Backup already exists, skipping..."
else
    cp dfx.json dfx.json.backup
    print_success "Original dfx.json backed up"
fi

cp dfx-ic-only.json dfx.json
print_success "Using IC-only configuration"

# Build only the canisters that have IDs on IC network
print_info "Building canisters for IC network..."
dfx build --network ic

if [ $? -ne 0 ]; then
    print_error "Build failed! Restoring original dfx.json..."
    cp dfx.json.backup dfx.json
    exit 1
fi

print_success "Canisters built successfully!"

echo ""
print_info "Step 2: Installing WASM modules to existing canisters..."

# Install the WASM modules to the existing canister IDs
print_info "Installing credential_nft WASM module..."
dfx canister --network ic install credential_nft --mode reinstall

if [ $? -eq 0 ]; then
    print_success "credential_nft WASM module installed successfully!"
else
    print_error "Failed to install credential_nft WASM module"
    print_info "Trying upgrade mode instead..."
    dfx canister --network ic install credential_nft --mode upgrade
fi

print_info "Installing storage WASM module..."
dfx canister --network ic install storage --mode reinstall

if [ $? -eq 0 ]; then
    print_success "storage WASM module installed successfully!"
else
    print_error "Failed to install storage WASM module"
    print_info "Trying upgrade mode instead..."
    dfx canister --network ic install storage --mode upgrade
fi

echo ""
print_info "Step 3: Testing canister functionality..."

# Test the getName function
print_info "Testing credential_nft canister..."
dfx canister --network ic call credential_nft getName

print_info "Testing storage canister..."
dfx canister --network ic call storage getName

echo ""
print_info "Step 4: Generating TypeScript declarations..."
dfx generate --network ic

echo ""
print_info "Step 5: Updating environment configuration..."

# Update .env.local with confirmed working canister IDs
cat > .env.local << EOF
# Generated by fix-ic-deployment.sh on $(date)
# dResume V2 - IC Network Configuration

# Network Configuration
NEXT_PUBLIC_DFX_NETWORK="ic"
NEXT_PUBLIC_IC_HOST="https://ic0.app"

# Canister IDs (IC Network - DEPLOYED & WORKING)
NEXT_PUBLIC_CREDENTIAL_NFT_CANISTER_ID="$CREDENTIAL_NFT_ID"   # ✅ DEPLOYED & WORKING
NEXT_PUBLIC_STORAGE_CANISTER_ID="$STORAGE_ID"                # ✅ DEPLOYED & WORKING

# Internet Identity Canister (Production)
NEXT_PUBLIC_INTERNET_IDENTITY_CANISTER_ID="rdmx6-jaaaa-aaaah-qdrha-cai"

# Application Configuration
NEXT_PUBLIC_APP_NAME="dResume"
NEXT_PUBLIC_APP_URL="https://dresume.app"

# Development Settings
NEXT_PUBLIC_ENABLE_DEV_LOGIN=true
EOF

print_success "Environment configuration updated!"

echo ""
print_info "Step 6: Restoring original dfx.json configuration..."
if [ -f "dfx.json.backup" ]; then
    cp dfx.json.backup dfx.json
    rm dfx.json.backup
    print_success "Original dfx.json restored"
else
    print_warning "No backup found, keeping current configuration"
fi

echo ""
print_success "🎉 IC Network Deployment Fixed!"
echo "================================"
echo ""
print_info "Your canisters are now properly deployed and working:"
echo "  • Credential NFT: $CREDENTIAL_NFT_ID ✅"
echo "  • Storage: $STORAGE_ID ✅"
echo ""
print_info "Next steps:"
echo "  1. Test the canisters: npm run test:ic"
echo "  2. Start your frontend: npm run dev"
echo "  3. Your app should now connect to IC network properly!"
echo ""
print_warning "Note: Make sure to commit your updated .env.local file"
